lookup = { 
    'ast.literal_eval': "ast.literal_eval(data)",
    'configparser.ConfigParser.read_string': "configparser.ConfigParser().read_string(data)",
    'django.core.serializers.deserialize':  "django.core.serializers.deserialize('json', data)",
    'email.message_from_string': "email.message_from_string(data)",
    'email.parser.BytesParser.parsebytes': "email.parser.BytesParser().parsebytes(data)",
    'email.parser.Parser.parsestr':  "email.parser.Parser().parsestr(data)",
    'email.utils.formataddr': "email.utils.formataddr(data)",
    'email.utils.parseaddr': "email.utils.parseaddr(data)",
    'email.utils.parsedate': "email.utils.parsedate(data)",
    'fnmatch.filter': "fnmatch.filter(['file1.txt', 'file2.txt'], data)",
    'ftplib.FTP': "ftplib.FTP(data)",
    'glob.glob': "glob.glob(data)",
    'html.parser.HTMLParser.feed': "html.parser.HTMLParser().feed(data)",
    'plistlib.dumps':  "plistlib.dumps(data)",
    'shlex.split': "shlex.split(data)",
    'smtplib.SMTP': "smtplib.SMTP(data)",
    'urllib.parse.parse_qs': "urllib.parse.parse_qs(data)",
    'cgi.parse_header': "cgi.parse_header(data)",
    'urllib.parse.parse_qsl': "urllib.parse.parse_qsl(data)",
    'json.loads': "json.loads(data)",
    'requests.get': "requests.get(data, params={'key': 'value'})",
    'yaml.load':     "yaml.load(data, Loader=yaml.FullLoader)",
    'exrex.getone': "exrex.getone(data)",
    'paramiko.SSHClient.connect':  "paramiko.SSHClient().connect(data, username='user', password='pass')",
    'scipy.optimize.minimize':     "scipy.optimize.minimize(data, x0, method='BFGS')",
    'wave.open, \'rb\')': "wave.open(io.BytesIO(data), 'rb')",
    'wave.open_rb': "wave.open(io.BytesIO(data), 'rb')",
    'sunau.open, \'rb\')': "sunau.open(io.BytesIO(data), 'rb')",
    'sunau.open_rb': "sunau.open(io.BytesIO(data), 'rb')",
    'pydoc.plain':  "pydoc.plain(pydoc.render_doc(data))",
    'PIL.Image.open)':"PIL.Image.open(io.BytesIO(data))",
    'PIL.Image.open':"PIL.Image.open(io.BytesIO(data))",
    'cgi.parse_multipart, pdict)':     "cgi.parse_multipart(io.BytesIO(data), pdict)",
    'cgi.parse_multipart_pdict':     "cgi.parse_multipart(io.BytesIO(data), pdict)",
    'construct.Struct.parse': 'construct.Struct.parse(data)',
    'geojson.loads': "geojson.loads(data)",
    'iptcinfo3.IPTCInfo)': "iptcinfo3.IPTCInfo(io.BytesIO(data))",
    'iptcinfo3.IPTCInfo': "iptcinfo3.IPTCInfo(io.BytesIO(data))",
    'mido.MidiFile)': "mido.MidiFile(file=io.BytesIO(data))",
    'mido.MidiFile': "mido.MidiFile(file=io.BytesIO(data))",
    'pandas.read_csv)': "pandas.read_csv(io.StringIO(data))",
    'pandas.read_csv': "pandas.read_csv(io.StringIO(data))",
    'phonenumbers.parse': "phonenumbers.parse(data, 'US')",
    'pydub.AudioSegment.from_file, format=\'mp3\')': "pydub.AudioSegment.from_file(io.BytesIO(data), format='mp3')",
    'pydub.AudioSegment.from_fileformatmp3': "pydub.AudioSegment.from_file(io.BytesIO(data), format='mp3')",
    'pyexcel.get_sheet':  "pyexcel.get_sheet(file_type='csv', file_content=data)",
    'pygments.lex)': "pygments.lex(data, pygments.lexers.PythonLexer())",
    'pygments.lex': "pygments.lex(data, pygments.lexers.PythonLexer())",
    'tablib.import_set': "tablib.import_set(data, format='csv')",   
    "chardet.detect" :"chardet.detect(data)",
    "ics.Calendar": "ics.Calendar(data)",
    "markdown.markdown": "markdown.markdown(data)",
    "rarfile.RarFile)": "rarfile.RarFile(io.BytesIO(data))",
    "rarfile.RarFile": "rarfile.RarFile(io.BytesIO(data))",
    "simplejson.loads": "simplejson.loads(data)",
    "xlrd.open_workbook": "xlrd.open_workbook(file_contents=data)",
    "yaml.safe_load": "yaml.safe_load(data)",
    "bs4.BeautifulSoup":"bs4.BeautifulSoup(data, 'html.parser')",
    "toml.loads":"toml.loads(data)",
    "markdown2.markdown": "markdown2.markdown(data)",
    "quopri.decodestring": "quopri.decodestring(data)",
    "html5lib.parse": "html5lib.parse(data)",
    "feedparser.parse": "feedparser.parse(data)"
}
